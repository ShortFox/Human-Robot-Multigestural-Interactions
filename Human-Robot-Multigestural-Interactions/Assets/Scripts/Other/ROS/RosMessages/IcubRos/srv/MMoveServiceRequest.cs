//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.IcubRos
{
    public class MMoveServiceRequest : Message
    {
        public const string RosMessageName = "icub_ros/MoveService";

        public string[] link_names;
        public double[] joint_positions;
        public Geometry.MPose target_pose;

        public MMoveServiceRequest()
        {
            this.link_names = new string[0];
            this.joint_positions = new double[0];
            this.target_pose = new Geometry.MPose();
        }

        public MMoveServiceRequest(string[] link_names, double[] joint_positions, Geometry.MPose target_pose)
        {
            this.link_names = link_names;
            this.joint_positions = joint_positions;
            this.target_pose = target_pose;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            
            listOfSerializations.Add(BitConverter.GetBytes(link_names.Length));
            foreach(var entry in link_names)
                listOfSerializations.Add(SerializeString(entry));
            
            listOfSerializations.Add(BitConverter.GetBytes(joint_positions.Length));
            foreach(var entry in joint_positions)
                listOfSerializations.Add(BitConverter.GetBytes(entry));
            listOfSerializations.AddRange(target_pose.SerializationStatements());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            
            var link_namesArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.link_names= new string[link_namesArrayLength];
            for(var i = 0; i < link_namesArrayLength; i++)
            {
                var link_namesStringBytesLength = DeserializeLength(data, offset);
                offset += 4;
                this.link_names[i] = DeserializeString(data, offset, link_namesStringBytesLength);
                offset += link_namesStringBytesLength;
            }
            
            var joint_positionsArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.joint_positions= new double[joint_positionsArrayLength];
            for(var i = 0; i < joint_positionsArrayLength; i++)
            {
                this.joint_positions[i] = BitConverter.ToDouble(data, offset);
                offset += 8;
            }
            offset = this.target_pose.Deserialize(data, offset);

            return offset;
        }

        public override string ToString()
        {
            return "MMoveServiceRequest: " +
            "\nlink_names: " + System.String.Join(", ", link_names.ToList()) +
            "\njoint_positions: " + System.String.Join(", ", joint_positions.ToList()) +
            "\ntarget_pose: " + target_pose.ToString();
        }
    }
}
